managed implementation in class zbp_vie_r_bill_head unique;
strict ( 2 );

define behavior for ZVIE_R_BILL_HEAD //alias <alias_name>
persistent table zvie_bill_header
lock master
authorization master ( instance )
//etag master <field_name>
{
  create ( precheck );
  update;
  delete ( features : instance );

  field ( readonly : update, mandatory : create ) BillId;

  field ( features : instance ) Currency;

  action ( features : instance ) updateBillingDate result [1] $self;
  static action createBillingDocHeader parameter ZVIE_A_CREATE_BILL_PARAMS result [1] $self;
  factory action copyBillingDocument [1];

  validation validateAmount on save { field NetAmount; create; update; }

  association _item { create; }

  mapping for zvie_bill_header
    {
      BillId             = bill_id;
      BillType           = bill_type;
      BillDate           = bill_date;
      PlanStartDate      = plan_start_date;
      PlanEndtDate       = plan_end_date;
      CustomerId         = customer_id;
      NetAmount          = net_amount;
      Currency           = currency;
      SalesOrg           = sales_org;
      CreatedBy          = createdby;
      CreateDat          = createdat;
      LastChangedBy      = lastchangedby;
      LastChangeDat      = lastchangedat;
      LocalLastChangeDat = locallastchangedat;
    }

}

define behavior for ZVIE_R_BILL_ITEM //alias alias
persistent table zvie_bill_item
lock dependent by _header
authorization dependent by _header
{
  update;
  delete;

  field ( readonly : update, mandatory : create ) BillId, ItemNo;

  determination determineItemDescription on save { create; }

  association _header;

  mapping for zvie_bill_item
    {
      BillId             = bill_id;
      ItemNo             = item_no;
      MaterialId         = material_id;
      Description        = description;
      Quantity           = quantity;
      ItemAmount         = item_amount;
      Currency           = currency;
      Uom                = uom;
      CreatedBy          = createdby;
      CreateDat          = createdat;
      LastChangedBy      = lastchangedby;
      LastChangeDat      = lastchangedat;
      LocalLastChangeDat = locallastchangedat;
    }
}